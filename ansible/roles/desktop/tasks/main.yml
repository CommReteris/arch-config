---
- name: install desktop packages
  pacman:
    name:
      - "{{ "desktop" | map('extract', _packages['repo']) | flatten }}"
    state: present
    extra_args: --noconfirm

- name: install video packages
  pacman:
    name:
      "{{ "video" | map('extract', _packages['repo']) | flatten }}"
    state: present
    extra_args: --noconfirm

- name: install audio packages
  pacman:
    name:
      "{{ "audio" | map('extract', _packages['repo']) | flatten }}"
    state: present
    extra_args: --noconfirm

- name: install applications packages
  pacman:
    name:
      -"{{ "apps" | map('extract', _packages['repo']) | flatten }}"
    state: present
    extra_args: --noconfirm

- name: Configure users for wayland
  user:
    name: '{{ item }}'
    shell: '{{ shell }}'
    append: yes
    groups: video # for nwg-shell
  with_items:
    - "{{ user }}"
    - greeter

- name: Create directory for nwg-shell
  become: no
  file:
    path: "/home/{{ user }}/bin"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '755'

- name: Set ~/bin directory to be automatically added to PATH
  blockinfile:
    path: "{{ item }}"
    insertafter: EOF
    block: |
      if [[ $UID -ge 1000 && -d $HOME/bin && -z $(echo $PATH | grep -o $HOME/bin) ]]
      then
        export PATH="${PATH}:$HOME/bin"
      fi

  with_items:
    - "/etc/profile"
    - "/home/{{ user }}/bin/.bashrc"

- name: Add ~/bin to PATH
  become: no
  shell: |
    export PATH="${PATH}:$HOME/bin"

- name: add missing gpg keys for aur
  become: no
  shell: gpg --recv --keyserver keyserver.ubuntu.com '{{ item }}'
  loop:
    - F4B432D5D67990E3 # wob

  changed_when: false

- name: install aur packages
  become: no
  aur:
    skip_installed: true
    name:
      - "{{ _packages['aur'] | flatten }}"


- name: run nwg-shell-installer
  become: no
  shell: |
    set timeout -1
    spawn nwg-shell-installer -a
    expect "Proceed? y/n "
    send -- "y\r"
    expect eof
    exit 0
  args:
    executable: /usr/bin/expect

- name: configure tuigreet-greetd
  copy:
    src: config.toml
    dest: /etc/greetd/config.toml
    mode: '644'

- name: configure XDG_SESSION_TYPE for wayland on sway
  copy:
    src: "{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: +x
  with_items:
    - sway-run
    - wayland-enablement.sh

- name: configure XDG_SESSION_TYPE for wayland on sway
  copy:
    src: sway-run
    dest: /usr/local/bin/sway-run
    mode: +x

- name: Enable greetd service
  systemd:
    name: greetd
    enabled: yes